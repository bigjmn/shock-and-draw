{"ast":null,"code":"import _toConsumableArray from\"/Users/jessenicholas/shock-draw-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/jessenicholas/shock-draw-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import socket from'../../context/socket.js';import{useEffect,useState}from'react';import AttackCard from'../AttackCard/AttackCard.js';import attacklist from'./attacklist.js';import classes from'./AttackZone.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";var AttackZone=function AttackZone(_ref){var maxTime=_ref.maxTime;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),attacks=_useState2[0],setAttacks=_useState2[1];var filterOut=function filterOut(timestamp){socket.emit('clearAttack',{timestamp:timestamp});setAttacks(function(attacks){return attacks.filter(function(x){return x.timestamp!=timestamp;});});};useEffect(function(){socket.on('takeAttack',function(data){var attackPack={timestamp:data.timestamp,color:data.color,type:attacklist[data.type]};setAttacks(function(oldAttackList){return[].concat(_toConsumableArray(oldAttackList),[attackPack]);});});return function(){socket.off('takeAttack');};});return/*#__PURE__*/_jsx(\"div\",{className:classes.attackContainer,children:attacks.map(function(card){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(AttackCard,{type:card.type,timestamp:card.timestamp,color:card.color,maxTime:maxTime,filterOut:filterOut})},card.timestamp);})});};export default AttackZone;","map":{"version":3,"sources":["/Users/jessenicholas/shock-draw-final/client/src/components/AttackZone/AttackZone.js"],"names":["socket","useEffect","useState","AttackCard","attacklist","classes","AttackZone","maxTime","attacks","setAttacks","filterOut","timestamp","emit","filter","x","on","data","attackPack","color","type","oldAttackList","off","attackContainer","map","card"],"mappings":"8UAAA,MAAOA,CAAAA,MAAP,KAAmB,yBAAnB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,MAAOC,CAAAA,UAAP,KAAuB,6BAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,iBAAvB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,C,2CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAe,IAAbC,CAAAA,OAAa,MAAbA,OAAa,CAEhC,cAA8BL,QAAQ,CAAC,EAAD,CAAtC,wCAAOM,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,SAAD,CAAe,CAC/BX,MAAM,CAACY,IAAP,CAAY,aAAZ,CAA2B,CAACD,SAAS,CAACA,SAAX,CAA3B,EACAF,UAAU,CAAC,SAAAD,OAAO,QAAIA,CAAAA,OAAO,CAACK,MAAR,CAAe,SAAAC,CAAC,QAAKA,CAAAA,CAAC,CAACH,SAAF,EAAeA,SAApB,EAAhB,CAAJ,EAAR,CAAV,CACD,CAHD,CAOAV,SAAS,CAAC,UAAM,CACdD,MAAM,CAACe,EAAP,CAAU,YAAV,CAAwB,SAACC,IAAD,CAAU,CAChC,GAAIC,CAAAA,UAAU,CAAG,CACfN,SAAS,CAAEK,IAAI,CAACL,SADD,CAEfO,KAAK,CAAEF,IAAI,CAACE,KAFG,CAGfC,IAAI,CAAEf,UAAU,CAACY,IAAI,CAACG,IAAN,CAHD,CAAjB,CAKAV,UAAU,CAAC,SAACW,aAAD,qCAAuBA,aAAvB,GAAsCH,UAAtC,IAAD,CAAV,CACD,CAPD,EAQA,MAAO,WAAM,CACXjB,MAAM,CAACqB,GAAP,CAAW,YAAX,EACD,CAFD,CAGD,CAZQ,CAAT,CAcA,mBACE,YAAK,SAAS,CAAEhB,OAAO,CAACiB,eAAxB,UACGd,OAAO,CAACe,GAAR,CAAY,SAACC,IAAD,qBACX,kCACE,KAAC,UAAD,EACE,IAAI,CAAEA,IAAI,CAACL,IADb,CAEE,SAAS,CAAEK,IAAI,CAACb,SAFlB,CAGE,KAAK,CAAEa,IAAI,CAACN,KAHd,CAIE,OAAO,CAAEX,OAJX,CAKE,SAAS,CAAEG,SALb,EADF,EAAUc,IAAI,CAACb,SAAf,CADW,EAAZ,CADH,EADF,CAcD,CAvCD,CAyCA,cAAeL,CAAAA,UAAf","sourcesContent":["import socket from '../../context/socket.js'\nimport { useEffect, useState } from 'react'\n\nimport AttackCard from '../AttackCard/AttackCard.js'\nimport attacklist from './attacklist.js'\n\nimport classes from './AttackZone.module.css'\n\nconst AttackZone = ({maxTime}) => {\n\n  const [attacks, setAttacks] = useState([])\n\n  const filterOut = (timestamp) => {\n    socket.emit('clearAttack', {timestamp:timestamp})\n    setAttacks(attacks => attacks.filter(x => (x.timestamp != timestamp)))\n  }\n\n\n\n  useEffect(() => {\n    socket.on('takeAttack', (data) => {\n      let attackPack = {\n        timestamp: data.timestamp,\n        color: data.color,\n        type: attacklist[data.type]\n      }\n      setAttacks((oldAttackList) => [...oldAttackList, attackPack])\n    })\n    return () => {\n      socket.off('takeAttack')\n    }\n  })\n\n  return (\n    <div className={classes.attackContainer}>\n      {attacks.map((card) => (\n        <div key={card.timestamp}>\n          <AttackCard\n            type={card.type}\n            timestamp={card.timestamp}\n            color={card.color}\n            maxTime={maxTime}\n            filterOut={filterOut}/>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default AttackZone\n"]},"metadata":{},"sourceType":"module"}