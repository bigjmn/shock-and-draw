{"ast":null,"code":"var _jsxFileName = \"/Users/jessenicholas/shock-draw-final/client/src/layouts/Room/Room.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport socket from '../../context/socket.js';\nimport Waitroom from '../Waitroom/Waitroom.js';\nimport Preview from '../Preview/Preview.js';\nimport GameRoom from '../GameRoom/GameRoom.js';\nimport Recap from '../Recap/Recap.js';\nimport EndGame from '../EndGame/EndGame.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Room = () => {\n  _s();\n\n  const [players, setPlayers] = useState([]);\n  const [redDrawer, setRedDrawer] = useState('');\n  const [blueDrawer, setBlueDrawer] = useState('');\n  const [round, setRound] = useState(0);\n  const [firstword, setFirstword] = useState('');\n  const [username, setUsername] = useState('');\n  const [teamColor, setTeamColor] = useState('');\n  const [oppColor, setOppColor] = useState('');\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [roundTime, setRoundTime] = useState(180);\n  const [attackTime, setAttackTime] = useState(20);\n  const [bonusTime, setBonusTime] = useState(20);\n  const [totalRedPoints, setTotalRedPoints] = useState(0);\n  const [totalBluePoints, setTotalBluePoints] = useState(0);\n  const [numRounds, setNumRounds] = useState(4);\n  const [redPoints, setRedPoints] = useState(0);\n  const [bluePoints, setBluePoints] = useState(0);\n  const [gamestage, setGamestage] = useState('waiting');\n  const [payload, setPayload] = useState(null);\n  const [teamTags, setTeamTags] = useState(null);\n  const [oppTags, setOppTags] = useState(null);\n  useEffect(() => {\n    socket.on('previewLaunch', data => {\n      setTotalRedPoints(currentTot => currentTot + redPoints);\n      setTotalBluePoints(currentTot => currentTot + bluePoints);\n      setRedPoints(0);\n      setBluePoints(0);\n      setRound(data.payload.round);\n      setRedDrawer(data.payload.reddrawer);\n      setBlueDrawer(data.payload.bluedrawer);\n      setGamestage('preview');\n    });\n    socket.on('takeRoundData', data => {\n      setIsDrawing(data.payload.isDrawing);\n      setFirstword(data.payload.firstword);\n      setTeamTags(data.payload.teamtags);\n      setOppTags(data.payload.opptags);\n      setTeamColor(data.payload.color);\n      setOppColor(data.payload.oppcolor);\n      setGamestage('playing');\n    });\n    socket.on('takeRecap', () => {\n      setGamestage('recap');\n    });\n    socket.on('endGame', () => {\n      setTotalRedPoints(currentTot => currentTot + redPoints);\n      setTotalBluePoints(currentTot => currentTot + bluePoints);\n      setRedPoints(0);\n      setBluePoints(0);\n      setGamestage('endgame');\n    });\n    socket.on('toWaitRoom', () => {\n      setTotalRedPoints(0);\n      setTotalBluePoints(0);\n      setRedDrawer(0);\n      setBlueDrawer(0);\n      setGamestage('waiting');\n    });\n    return () => {\n      socket.off('previewLaunch');\n      socket.off('takeRoundData');\n      socket.off('takeRecap');\n      socket.off('endGame');\n      socket.off('toWaitRoom');\n    };\n  });\n  return gamestage == 'waiting' ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Waitroom, {\n      players: players,\n      setPlayers: setPlayers,\n      setGamestage: setGamestage,\n      setRedDrawer: setRedDrawer,\n      username: username,\n      setUsername: setUsername,\n      roundTime: roundTime,\n      attackTime: attackTime,\n      bonusTime: bonusTime,\n      numRounds: numRounds,\n      setRoundTime: setRoundTime,\n      setAttackTime: setAttackTime,\n      setBonusTime: setBonusTime,\n      setNumRounds: setNumRounds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this) : gamestage == 'preview' ? /*#__PURE__*/_jsxDEV(Preview, {\n    round: round,\n    redDrawer: redDrawer,\n    blueDrawer: blueDrawer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this) : gamestage == 'playing' ? /*#__PURE__*/_jsxDEV(GameRoom, {\n    isDrawing: isDrawing,\n    roundTime: roundTime,\n    attackTime: attackTime,\n    bonusTime: bonusTime,\n    redPoints: redPoints,\n    bluePoints: bluePoints,\n    setRedPoints: setRedPoints,\n    setBluePoints: setBluePoints,\n    teamTags: teamTags,\n    oppTags: oppTags,\n    teamColor: teamColor,\n    oppColor: oppColor,\n    firstword: firstword,\n    round: round,\n    numRounds: numRounds\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this) : gamestage == 'recap' ? /*#__PURE__*/_jsxDEV(Recap, {\n    totalRedPoints: totalRedPoints,\n    totalBluePoints: totalBluePoints,\n    redPoints: redPoints,\n    bluePoints: bluePoints,\n    redDrawer: redDrawer,\n    blueDrawer: blueDrawer,\n    round: round\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 3\n  }, this) : gamestage == 'endgame' ? /*#__PURE__*/_jsxDEV(EndGame, {\n    totalRedPoints: totalRedPoints,\n    totalBluePoints: totalBluePoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 6\n  }, this);\n};\n\n_s(Room, \"H3FXk9LALYxvteXfSYh+Lgc753I=\");\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/Users/jessenicholas/shock-draw-final/client/src/layouts/Room/Room.js"],"names":["useState","useEffect","socket","Waitroom","Preview","GameRoom","Recap","EndGame","Room","players","setPlayers","redDrawer","setRedDrawer","blueDrawer","setBlueDrawer","round","setRound","firstword","setFirstword","username","setUsername","teamColor","setTeamColor","oppColor","setOppColor","isDrawing","setIsDrawing","roundTime","setRoundTime","attackTime","setAttackTime","bonusTime","setBonusTime","totalRedPoints","setTotalRedPoints","totalBluePoints","setTotalBluePoints","numRounds","setNumRounds","redPoints","setRedPoints","bluePoints","setBluePoints","gamestage","setGamestage","payload","setPayload","teamTags","setTeamTags","oppTags","setOppTags","on","data","currentTot","reddrawer","bluedrawer","teamtags","opptags","color","oppcolor","off"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACyB,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM,CAAC2B,SAAD,EAAYC,YAAZ,IAA4B5B,QAAQ,CAAC,GAAD,CAA1C;AACA,QAAM,CAAC6B,UAAD,EAAaC,aAAb,IAA8B9B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC+B,SAAD,EAAYC,YAAZ,IAA4BhC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiC,cAAD,EAAiBC,iBAAjB,IAAsClC,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACmC,eAAD,EAAkBC,kBAAlB,IAAwCpC,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAACqC,SAAD,EAAYC,YAAZ,IAA4BtC,QAAQ,CAAC,CAAD,CAA1C;AAEA,QAAM,CAACuC,SAAD,EAAYC,YAAZ,IAA4BxC,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACyC,UAAD,EAAaC,aAAb,IAA8B1C,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAM,CAAC2C,SAAD,EAAYC,YAAZ,IAA4B5C,QAAQ,CAAC,SAAD,CAA1C;AAEA,QAAM,CAAC6C,OAAD,EAAUC,UAAV,IAAwB9C,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAC+C,QAAD,EAAWC,WAAX,IAA0BhD,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACiD,OAAD,EAAUC,UAAV,IAAwBlD,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,MAAM,CAACiD,EAAP,CAAU,eAAV,EAA4BC,IAAD,IAAU;AACnClB,MAAAA,iBAAiB,CAAEmB,UAAD,IAAgBA,UAAU,GAAGd,SAA9B,CAAjB;AACAH,MAAAA,kBAAkB,CAAEiB,UAAD,IAAgBA,UAAU,GAAGZ,UAA9B,CAAlB;AACAD,MAAAA,YAAY,CAAC,CAAD,CAAZ;AACAE,MAAAA,aAAa,CAAC,CAAD,CAAb;AACA1B,MAAAA,QAAQ,CAACoC,IAAI,CAACP,OAAL,CAAa9B,KAAd,CAAR;AACAH,MAAAA,YAAY,CAACwC,IAAI,CAACP,OAAL,CAAaS,SAAd,CAAZ;AACAxC,MAAAA,aAAa,CAACsC,IAAI,CAACP,OAAL,CAAaU,UAAd,CAAb;AACAX,MAAAA,YAAY,CAAC,SAAD,CAAZ;AACD,KATD;AAUA1C,IAAAA,MAAM,CAACiD,EAAP,CAAU,eAAV,EAA4BC,IAAD,IAAU;AACnC1B,MAAAA,YAAY,CAAC0B,IAAI,CAACP,OAAL,CAAapB,SAAd,CAAZ;AACAP,MAAAA,YAAY,CAACkC,IAAI,CAACP,OAAL,CAAa5B,SAAd,CAAZ;AACA+B,MAAAA,WAAW,CAACI,IAAI,CAACP,OAAL,CAAaW,QAAd,CAAX;AACAN,MAAAA,UAAU,CAACE,IAAI,CAACP,OAAL,CAAaY,OAAd,CAAV;AACAnC,MAAAA,YAAY,CAAC8B,IAAI,CAACP,OAAL,CAAaa,KAAd,CAAZ;AACAlC,MAAAA,WAAW,CAAC4B,IAAI,CAACP,OAAL,CAAac,QAAd,CAAX;AACAf,MAAAA,YAAY,CAAC,SAAD,CAAZ;AACD,KARD;AASA1C,IAAAA,MAAM,CAACiD,EAAP,CAAU,WAAV,EAAuB,MAAM;AAC3BP,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACD,KAFD;AAGA1C,IAAAA,MAAM,CAACiD,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBjB,MAAAA,iBAAiB,CAAEmB,UAAD,IAAgBA,UAAU,GAAGd,SAA9B,CAAjB;AACAH,MAAAA,kBAAkB,CAAEiB,UAAD,IAAgBA,UAAU,GAAGZ,UAA9B,CAAlB;AACAD,MAAAA,YAAY,CAAC,CAAD,CAAZ;AACAE,MAAAA,aAAa,CAAC,CAAD,CAAb;AACAE,MAAAA,YAAY,CAAC,SAAD,CAAZ;AACD,KAND;AAOA1C,IAAAA,MAAM,CAACiD,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5BjB,MAAAA,iBAAiB,CAAC,CAAD,CAAjB;AACAE,MAAAA,kBAAkB,CAAC,CAAD,CAAlB;AACAxB,MAAAA,YAAY,CAAC,CAAD,CAAZ;AACAE,MAAAA,aAAa,CAAC,CAAD,CAAb;AACA8B,MAAAA,YAAY,CAAC,SAAD,CAAZ;AACD,KAND;AAQA,WAAO,MAAM;AACX1C,MAAAA,MAAM,CAAC0D,GAAP,CAAW,eAAX;AACA1D,MAAAA,MAAM,CAAC0D,GAAP,CAAW,eAAX;AACA1D,MAAAA,MAAM,CAAC0D,GAAP,CAAW,WAAX;AACA1D,MAAAA,MAAM,CAAC0D,GAAP,CAAW,SAAX;AACA1D,MAAAA,MAAM,CAAC0D,GAAP,CAAW,YAAX;AACD,KAND;AAOD,GA7CQ,CAAT;AAoDA,SAAQjB,SAAS,IAAE,SAAZ,gBAEL;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,OAAO,EAAElC,OAAnB;AACE,MAAA,UAAU,EAAEC,UADd;AAEE,MAAA,YAAY,EAAEkC,YAFhB;AAGE,MAAA,YAAY,EAAEhC,YAHhB;AAIE,MAAA,QAAQ,EAAEO,QAJZ;AAKE,MAAA,WAAW,EAAEC,WALf;AAUE,MAAA,SAAS,EAAEO,SAVb;AAWE,MAAA,UAAU,EAAEE,UAXd;AAYE,MAAA,SAAS,EAAEE,SAZb;AAaE,MAAA,SAAS,EAAEM,SAbb;AAcE,MAAA,YAAY,EAAET,YAdhB;AAeE,MAAA,aAAa,EAAEE,aAfjB;AAgBE,MAAA,YAAY,EAAEE,YAhBhB;AAiBE,MAAA,YAAY,EAAEM;AAjBhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFK,GAsBFK,SAAS,IAAI,SAAd,gBAEF,QAAC,OAAD;AAAS,IAAA,KAAK,EAAE5B,KAAhB;AAAuB,IAAA,SAAS,EAAEJ,SAAlC;AAA6C,IAAA,UAAU,EAAEE;AAAzD;AAAA;AAAA;AAAA;AAAA,UAFE,GAGC8B,SAAS,IAAI,SAAd,gBAEF,QAAC,QAAD;AAAU,IAAA,SAAS,EAAElB,SAArB;AAAgC,IAAA,SAAS,EAAEE,SAA3C;AACA,IAAA,UAAU,EAAEE,UADZ;AAEA,IAAA,SAAS,EAAEE,SAFX;AAGA,IAAA,SAAS,EAAEQ,SAHX;AAIA,IAAA,UAAU,EAAEE,UAJZ;AAKA,IAAA,YAAY,EAAED,YALd;AAMA,IAAA,aAAa,EAAEE,aANf;AAOA,IAAA,QAAQ,EAAIK,QAPZ;AAQA,IAAA,OAAO,EAAIE,OARX;AASA,IAAA,SAAS,EAAE5B,SATX;AAUA,IAAA,QAAQ,EAAEE,QAVV;AAWA,IAAA,SAAS,EAAEN,SAXX;AAYA,IAAA,KAAK,EAAEF,KAZP;AAaA,IAAA,SAAS,EAAEsB;AAbX;AAAA;AAAA;AAAA;AAAA,UAFE,GAgBDM,SAAS,IAAI,OAAd,gBAEF,QAAC,KAAD;AAAO,IAAA,cAAc,EAAEV,cAAvB;AACE,IAAA,eAAe,EAAEE,eADnB;AAEE,IAAA,SAAS,EAAEI,SAFb;AAGE,IAAA,UAAU,EAAEE,UAHd;AAIE,IAAA,SAAS,EAAE9B,SAJb;AAKE,IAAA,UAAU,EAAEE,UALd;AAME,IAAA,KAAK,EAAEE;AANT;AAAA;AAAA;AAAA;AAAA,UAFE,GAUC4B,SAAS,IAAI,SAAd,gBAEF,QAAC,OAAD;AAAS,IAAA,cAAc,EAAEV,cAAzB;AACE,IAAA,eAAe,EAAEE;AADnB;AAAA;AAAA;AAAA;AAAA,UAFE,gBAKC;AAAA;AAAA;AAAA;AAAA,UAxDH;AA6DD,CA9ID;;GAAM3B,I;;KAAAA,I;AAgJN,eAAeA,IAAf","sourcesContent":["import {useState, useEffect} from 'react'\nimport socket from '../../context/socket.js'\nimport Waitroom from '../Waitroom/Waitroom.js'\nimport Preview from '../Preview/Preview.js'\nimport GameRoom from '../GameRoom/GameRoom.js'\nimport Recap from '../Recap/Recap.js'\nimport EndGame from '../EndGame/EndGame.js'\nconst Room = () => {\n\n  const [players, setPlayers] = useState([])\n  const [redDrawer, setRedDrawer] = useState('')\n  const [blueDrawer, setBlueDrawer] = useState('')\n  const [round, setRound] = useState(0)\n  const [firstword, setFirstword] = useState('')\n  const [username, setUsername] = useState('')\n  const [teamColor, setTeamColor] = useState('')\n  const [oppColor, setOppColor] = useState('')\n\n  const [isDrawing, setIsDrawing] = useState(false)\n\n  const [roundTime, setRoundTime] = useState(180)\n  const [attackTime, setAttackTime] = useState(20)\n  const [bonusTime, setBonusTime] = useState(20)\n  const [totalRedPoints, setTotalRedPoints] = useState(0)\n  const [totalBluePoints, setTotalBluePoints] = useState(0)\n  const [numRounds, setNumRounds] = useState(4)\n\n  const [redPoints, setRedPoints] = useState(0)\n  const [bluePoints, setBluePoints] = useState(0)\n\n  const [gamestage, setGamestage] = useState('waiting')\n\n  const [payload, setPayload] = useState(null)\n  const [teamTags, setTeamTags] = useState(null)\n  const [oppTags, setOppTags] = useState(null)\n\n  useEffect(() => {\n    socket.on('previewLaunch', (data) => {\n      setTotalRedPoints((currentTot) => currentTot + redPoints)\n      setTotalBluePoints((currentTot) => currentTot + bluePoints)\n      setRedPoints(0)\n      setBluePoints(0)\n      setRound(data.payload.round)\n      setRedDrawer(data.payload.reddrawer)\n      setBlueDrawer(data.payload.bluedrawer)\n      setGamestage('preview')\n    })\n    socket.on('takeRoundData', (data) => {\n      setIsDrawing(data.payload.isDrawing)\n      setFirstword(data.payload.firstword)\n      setTeamTags(data.payload.teamtags)\n      setOppTags(data.payload.opptags)\n      setTeamColor(data.payload.color)\n      setOppColor(data.payload.oppcolor)\n      setGamestage('playing')\n    })\n    socket.on('takeRecap', () => {\n      setGamestage('recap')\n    })\n    socket.on('endGame', () => {\n      setTotalRedPoints((currentTot) => currentTot + redPoints)\n      setTotalBluePoints((currentTot) => currentTot + bluePoints)\n      setRedPoints(0)\n      setBluePoints(0)\n      setGamestage('endgame')\n    })\n    socket.on('toWaitRoom', () => {\n      setTotalRedPoints(0)\n      setTotalBluePoints(0)\n      setRedDrawer(0)\n      setBlueDrawer(0)\n      setGamestage('waiting')\n    })\n\n    return () => {\n      socket.off('previewLaunch')\n      socket.off('takeRoundData')\n      socket.off('takeRecap')\n      socket.off('endGame')\n      socket.off('toWaitRoom')\n    }\n  })\n\n\n\n\n\n\n  return (gamestage=='waiting') ?\n  (\n    <div>\n      <Waitroom players={players}\n        setPlayers={setPlayers}\n        setGamestage={setGamestage}\n        setRedDrawer={setRedDrawer}\n        username={username}\n        setUsername={setUsername}\n\n\n\n\n        roundTime={roundTime}\n        attackTime={attackTime}\n        bonusTime={bonusTime}\n        numRounds={numRounds}\n        setRoundTime={setRoundTime}\n        setAttackTime={setAttackTime}\n        setBonusTime={setBonusTime}\n        setNumRounds={setNumRounds}/>\n    </div>\n  ) : (gamestage == 'preview') ?\n  (\n    <Preview round={round} redDrawer={redDrawer} blueDrawer={blueDrawer}/>\n  ) : (gamestage == 'playing') ?\n  (\n    <GameRoom isDrawing={isDrawing} roundTime={roundTime}\n    attackTime={attackTime}\n    bonusTime={bonusTime}\n    redPoints={redPoints}\n    bluePoints={bluePoints}\n    setRedPoints={setRedPoints}\n    setBluePoints={setBluePoints}\n    teamTags = {teamTags}\n    oppTags = {oppTags}\n    teamColor={teamColor}\n    oppColor={oppColor}\n    firstword={firstword}\n    round={round}\n    numRounds={numRounds}/>\n) : (gamestage == 'recap') ?\n(\n  <Recap totalRedPoints={totalRedPoints}\n    totalBluePoints={totalBluePoints}\n    redPoints={redPoints}\n    bluePoints={bluePoints}\n    redDrawer={redDrawer}\n    blueDrawer={blueDrawer}\n    round={round} />\n\n) : (gamestage == 'endgame') ?\n(\n  <EndGame totalRedPoints={totalRedPoints}\n    totalBluePoints={totalBluePoints} />\n\n) : (<div></div>)\n\n\n\n\n}\n\nexport default Room\n"]},"metadata":{},"sourceType":"module"}