{"ast":null,"code":"var _jsxFileName = \"/Users/jessenicholas/shock-draw-final/client/src/components/MessageInput/MessageInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport classes from './MessageInput.module.css';\nimport socket from '../../context/socket.js';\nimport { reversify } from '../../helpers.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageInput = _ref => {\n  _s();\n\n  let {\n    isDrawing\n  } = _ref;\n  const [message, setMessage] = useState('');\n  const [reversed, setReversed] = useState(false);\n\n  const handleChange = e => setMessage(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let guess = reversed ? reversify(message) : message;\n    socket.emit('guess', {\n      guess: guess\n    });\n    setMessage('');\n  };\n\n  useEffect(() => {\n    socket.on('reverse', () => {\n      setReversed(true);\n    });\n    socket.on('reverseclear', () => {\n      setReversed(false);\n    });\n    return () => {\n      socket.off('reverse');\n      socket.off('reverseclear');\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.guessform,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: isDrawing,\n      maxLength: 32,\n      className: classes.guessInput,\n      type: \"text\",\n      value: message,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessageInput, \"SxY+cMpmN6R2ldc2mLrRUJ3IowQ=\");\n\n_c = MessageInput;\nexport default MessageInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"sources":["/Users/jessenicholas/shock-draw-final/client/src/components/MessageInput/MessageInput.js"],"names":["React","useState","useEffect","classes","socket","reversify","MessageInput","isDrawing","message","setMessage","reversed","setReversed","handleChange","e","target","value","handleSubmit","preventDefault","guess","emit","on","off","guessform","guessInput"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;;;AAEA,MAAMC,YAAY,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAACC,IAAAA;AAAD,GAAgB;AAEpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;;AAGA,QAAMW,YAAY,GAAIC,CAAD,IAAOJ,UAAU,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtC;;AACA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACA,QAAIC,KAAK,GAAGR,QAAQ,GAAGL,SAAS,CAACG,OAAD,CAAZ,GAAwBA,OAA5C;AACAJ,IAAAA,MAAM,CAACe,IAAP,CAAY,OAAZ,EAAqB;AAACD,MAAAA,KAAK,EAACA;AAAP,KAArB;AACAT,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GALD;;AAOAP,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBT,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD;AAGAP,IAAAA,MAAM,CAACgB,EAAP,CAAU,cAAV,EAA0B,MAAM;AAC9BT,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFD;AAGA,WAAO,MAAM;AACXP,MAAAA,MAAM,CAACiB,GAAP,CAAW,SAAX;AACAjB,MAAAA,MAAM,CAACiB,GAAP,CAAW,cAAX;AACD,KAHD;AAID,GAXQ,CAAT;AAaA,sBACE;AAAM,IAAA,SAAS,EAAElB,OAAO,CAACmB,SAAzB;AAAoC,IAAA,QAAQ,EAAEN,YAA9C;AAAA,2BACE;AAAO,MAAA,QAAQ,EAAET,SAAjB;AAA4B,MAAA,SAAS,EAAE,EAAvC;AAA2C,MAAA,SAAS,EAAEJ,OAAO,CAACoB,UAA9D;AAA0E,MAAA,IAAI,EAAC,MAA/E;AAAsF,MAAA,KAAK,EAAEf,OAA7F;AAAsG,MAAA,QAAQ,EAAEI;AAAhH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhCD;;GAAMN,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport classes from './MessageInput.module.css'\nimport socket from '../../context/socket.js'\nimport {reversify} from '../../helpers.js'\n\nconst MessageInput = ({isDrawing}) => {\n\n  const [message, setMessage] = useState('')\n  const [reversed, setReversed] = useState(false)\n\n\n  const handleChange = (e) => setMessage(e.target.value)\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    let guess = reversed ? reversify(message) : message\n    socket.emit('guess', {guess:guess})\n    setMessage('')\n  }\n\n  useEffect(() => {\n    socket.on('reverse', () => {\n      setReversed(true)\n    })\n    socket.on('reverseclear', () => {\n      setReversed(false)\n    })\n    return () => {\n      socket.off('reverse')\n      socket.off('reverseclear')\n    }\n  })\n\n  return(\n    <form className={classes.guessform} onSubmit={handleSubmit}>\n      <input disabled={isDrawing} maxLength={32} className={classes.guessInput} type='text' value={message} onChange={handleChange}></input>\n    </form>\n  )\n}\n\nexport default MessageInput\n"]},"metadata":{},"sourceType":"module"}