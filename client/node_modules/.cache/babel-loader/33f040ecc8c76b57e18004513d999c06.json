{"ast":null,"code":"var _jsxFileName = \"/Users/jessenicholas/shock-draw-final/client/src/components/AttackZone/AttackZone.js\",\n    _s = $RefreshSig$();\n\nimport socket from '../../context/socket.js';\nimport { useEffect, useState } from 'react';\nimport AttackCard from '../AttackCard/AttackCard.js';\nimport attacklist from './attacklist.js';\nimport classes from './AttackZone.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AttackZone = _ref => {\n  _s();\n\n  let {\n    maxTime\n  } = _ref;\n  const [attacks, setAttacks] = useState([]);\n\n  const filterOut = timestamp => {\n    socket.emit('clearAttack', {\n      timestamp: timestamp\n    });\n    setAttacks(attacks => attacks.filter(x => x.timestamp != timestamp));\n  };\n\n  useEffect(() => {\n    socket.on('takeAttack', data => {\n      let attackPack = {\n        timestamp: data.timestamp,\n        color: data.color,\n        type: attacklist[data.type]\n      };\n      setAttacks(oldAttackList => [...oldAttackList, attackPack]);\n    });\n    return () => {\n      socket.off('takeAttack');\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.attackContainer,\n    children: attacks.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AttackCard, {\n        type: card.type,\n        timestamp: card.timestamp,\n        color: card.color,\n        maxTime: maxTime,\n        filterOut: filterOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, card.timestamp, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AttackZone, \"URe7rH6VU+aAK8ZzAndrbxfz0C8=\");\n\n_c = AttackZone;\nexport default AttackZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttackZone\");","map":{"version":3,"sources":["/Users/jessenicholas/shock-draw-final/client/src/components/AttackZone/AttackZone.js"],"names":["socket","useEffect","useState","AttackCard","attacklist","classes","AttackZone","maxTime","attacks","setAttacks","filterOut","timestamp","emit","filter","x","on","data","attackPack","color","type","oldAttackList","off","attackContainer","map","card"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;;;AAEA,MAAMC,UAAU,GAAG,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAEhC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,SAAS,GAAIC,SAAD,IAAe;AAC/BX,IAAAA,MAAM,CAACY,IAAP,CAAY,aAAZ,EAA2B;AAACD,MAAAA,SAAS,EAACA;AAAX,KAA3B;AACAF,IAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,CAACK,MAAR,CAAeC,CAAC,IAAKA,CAAC,CAACH,SAAF,IAAeA,SAApC,CAAZ,CAAV;AACD,GAHD;;AAOAV,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,MAAM,CAACe,EAAP,CAAU,YAAV,EAAyBC,IAAD,IAAU;AAChC,UAAIC,UAAU,GAAG;AACfN,QAAAA,SAAS,EAAEK,IAAI,CAACL,SADD;AAEfO,QAAAA,KAAK,EAAEF,IAAI,CAACE,KAFG;AAGfC,QAAAA,IAAI,EAAEf,UAAU,CAACY,IAAI,CAACG,IAAN;AAHD,OAAjB;AAKAV,MAAAA,UAAU,CAAEW,aAAD,IAAmB,CAAC,GAAGA,aAAJ,EAAmBH,UAAnB,CAApB,CAAV;AACD,KAPD;AAQA,WAAO,MAAM;AACXjB,MAAAA,MAAM,CAACqB,GAAP,CAAW,YAAX;AACD,KAFD;AAGD,GAZQ,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAACiB,eAAxB;AAAA,cACGd,OAAO,CAACe,GAAR,CAAaC,IAAD,iBACX;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,IAAI,EAAEA,IAAI,CAACL,IADb;AAEE,QAAA,SAAS,EAAEK,IAAI,CAACb,SAFlB;AAGE,QAAA,KAAK,EAAEa,IAAI,CAACN,KAHd;AAIE,QAAA,OAAO,EAAEX,OAJX;AAKE,QAAA,SAAS,EAAEG;AALb;AAAA;AAAA;AAAA;AAAA;AADF,OAAUc,IAAI,CAACb,SAAf;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvCD;;GAAML,U;;KAAAA,U;AAyCN,eAAeA,UAAf","sourcesContent":["import socket from '../../context/socket.js'\nimport { useEffect, useState } from 'react'\n\nimport AttackCard from '../AttackCard/AttackCard.js'\nimport attacklist from './attacklist.js'\n\nimport classes from './AttackZone.module.css'\n\nconst AttackZone = ({maxTime}) => {\n\n  const [attacks, setAttacks] = useState([])\n\n  const filterOut = (timestamp) => {\n    socket.emit('clearAttack', {timestamp:timestamp})\n    setAttacks(attacks => attacks.filter(x => (x.timestamp != timestamp)))\n  }\n\n\n\n  useEffect(() => {\n    socket.on('takeAttack', (data) => {\n      let attackPack = {\n        timestamp: data.timestamp,\n        color: data.color,\n        type: attacklist[data.type]\n      }\n      setAttacks((oldAttackList) => [...oldAttackList, attackPack])\n    })\n    return () => {\n      socket.off('takeAttack')\n    }\n  })\n\n  return (\n    <div className={classes.attackContainer}>\n      {attacks.map((card) => (\n        <div key={card.timestamp}>\n          <AttackCard\n            type={card.type}\n            timestamp={card.timestamp}\n            color={card.color}\n            maxTime={maxTime}\n            filterOut={filterOut}/>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default AttackZone\n"]},"metadata":{},"sourceType":"module"}