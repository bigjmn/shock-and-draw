{"ast":null,"code":"import _slicedToArray from\"/Users/jessenicholas/shock-draw-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import socket from'../../context/socket.js';import classes from'./Recap.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Recap=function Recap(props){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),counting=_useState4[0],setCounting=_useState4[1];var handleCount=function handleCount(){var stillcounting=false;if(count<props.redPoints){props.setTotalRedPoints(function(x){return x+1;});stillcounting=true;}if(count<props.bluePoints){props.setTotalBluePoints(function(x){return x+1;});stillcounting=true;}stillcounting?setCount(function(x){return x+1;}):setCounting(false);};useEffect(function(){console.log('adding');var int=null;counting?setInterval(handleCount,500):socket.emit('recapOver');return function(){clearInterval(int);};},[counting]);return/*#__PURE__*/_jsxs(\"div\",{className:classes.recapContainer,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.totalpointsHolder,style:{backgroundColor:\"#ff3b2d\"},children:/*#__PURE__*/_jsx(\"h1\",{children:props.totalRedPoints})}),/*#__PURE__*/_jsx(\"div\",{className:classes.totalpointsHolder,style:{backgroundColor:\"#2df1ff\"},children:/*#__PURE__*/_jsx(\"h1\",{children:props.totalBluePoints})})]});};export default Recap;","map":{"version":3,"sources":["/Users/jessenicholas/shock-draw-final/client/src/layouts/Recap/Recap.js"],"names":["useEffect","useState","socket","classes","Recap","props","count","setCount","counting","setCounting","handleCount","stillcounting","redPoints","setTotalRedPoints","x","bluePoints","setTotalBluePoints","console","log","int","setInterval","emit","clearInterval","recapContainer","totalpointsHolder","backgroundColor","totalRedPoints","totalBluePoints"],"mappings":"mKAAA,OAAQA,SAAR,CAAmBC,QAAnB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACvB,cAA0BJ,QAAQ,CAAC,CAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eACA,eAAgCN,QAAQ,CAAC,IAAD,CAAxC,yCAAOO,QAAP,eAAiBC,WAAjB,eAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAIC,CAAAA,aAAa,CAAG,KAApB,CACA,GAAIL,KAAK,CAAGD,KAAK,CAACO,SAAlB,CAA4B,CAC1BP,KAAK,CAACQ,iBAAN,CAAwB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAAC,CAAN,EAAzB,EACAH,aAAa,CAAG,IAAhB,CAED,CACD,GAAIL,KAAK,CAAGD,KAAK,CAACU,UAAlB,CAA6B,CAC3BV,KAAK,CAACW,kBAAN,CAAyB,SAAAF,CAAC,QAAIA,CAAAA,CAAC,CAAC,CAAN,EAA1B,EACAH,aAAa,CAAG,IAAhB,CACD,CAEDA,aAAa,CAAGJ,QAAQ,CAAC,SAAAO,CAAC,QAAIA,CAAAA,CAAC,CAAC,CAAN,EAAF,CAAX,CAAwBL,WAAW,CAAC,KAAD,CAAhD,CAGD,CAfD,CAiBAT,SAAS,CAAC,UAAM,CACdiB,OAAO,CAACC,GAAR,CAAY,QAAZ,EACA,GAAIC,CAAAA,GAAG,CAAG,IAAV,CACAX,QAAQ,CAAGY,WAAW,CAACV,WAAD,CAAc,GAAd,CAAd,CAAmCR,MAAM,CAACmB,IAAP,CAAY,WAAZ,CAA3C,CAOA,MAAO,WAAM,CACXC,aAAa,CAACH,GAAD,CAAb,CAGD,CAJD,CAKD,CAfQ,CAeN,CAACX,QAAD,CAfM,CAAT,CAiBA,mBACE,aAAK,SAAS,CAAEL,OAAO,CAACoB,cAAxB,wBACE,YAAK,SAAS,CAAEpB,OAAO,CAACqB,iBAAxB,CAA2C,KAAK,CAAE,CAACC,eAAe,CAAC,SAAjB,CAAlD,uBACE,oBAAKpB,KAAK,CAACqB,cAAX,EADF,EADF,cAIE,YAAK,SAAS,CAAEvB,OAAO,CAACqB,iBAAxB,CAA2C,KAAK,CAAE,CAACC,eAAe,CAAC,SAAjB,CAAlD,uBACE,oBAAKpB,KAAK,CAACsB,eAAX,EADF,EAJF,GADF,CAUD,CAjDD,CAmDA,cAAevB,CAAAA,KAAf","sourcesContent":["import {useEffect, useState} from 'react'\nimport socket from '../../context/socket.js'\n\nimport classes from './Recap.module.css'\n\nconst Recap = (props) => {\n  const [count, setCount] = useState(0)\n  const [counting, setCounting] = useState(true)\n\n\n  const handleCount = () => {\n    let stillcounting = false\n    if (count < props.redPoints){\n      props.setTotalRedPoints(x => x+1)\n      stillcounting = true\n\n    }\n    if (count < props.bluePoints){\n      props.setTotalBluePoints(x => x+1)\n      stillcounting = true\n    }\n\n    stillcounting ? setCount(x => x+1) : setCounting(false)\n\n\n  }\n\n  useEffect(() => {\n    console.log('adding')\n    let int = null\n    counting ? setInterval(handleCount, 500) : socket.emit('recapOver')\n\n\n\n\n\n\n    return () => {\n      clearInterval(int)\n\n\n    }\n  }, [counting])\n\n  return (\n    <div className={classes.recapContainer}>\n      <div className={classes.totalpointsHolder} style={{backgroundColor:\"#ff3b2d\"}}>\n        <h1>{props.totalRedPoints}</h1>\n      </div>\n      <div className={classes.totalpointsHolder} style={{backgroundColor:\"#2df1ff\"}}>\n        <h1>{props.totalBluePoints}</h1>\n      </div>\n    </div>\n  )\n}\n\nexport default Recap\n"]},"metadata":{},"sourceType":"module"}