{"ast":null,"code":"var _jsxFileName = \"/Users/jessenicholas/shock-draw-final/client/src/components/Timer/Timer.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = _ref => {\n  _s();\n\n  let {\n    maxTime,\n    startTime,\n    secSetter\n  } = _ref;\n  useEffect(() => {\n    let int = null;\n\n    if (startTime == 0) {\n      return;\n    }\n\n    int = setInterval(() => {\n      secSetter(maxTime - Math.round((Date.now() - startTime) / 1000));\n    }, 1000);\n    return function cleanup() {\n      console.log('clearing');\n      clearInterval(int);\n    };\n  }, [startTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/jessenicholas/shock-draw-final/client/src/components/Timer/Timer.js"],"names":["useEffect","useState","Timer","maxTime","startTime","secSetter","int","setInterval","Math","round","Date","now","cleanup","console","log","clearInterval"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAmC,OAAnC;;;AACA,MAAMC,KAAK,GAAG,QAAqC;AAAA;;AAAA,MAApC;AAACC,IAAAA,OAAD;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA;AAArB,GAAoC;AASjDL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,GAAG,GAAG,IAAV;;AACA,QAAIF,SAAS,IAAI,CAAjB,EAAmB;AACjB;AACD;;AACDE,IAAAA,GAAG,GAAGC,WAAW,CAAC,MAAM;AAEtBF,MAAAA,SAAS,CAACF,OAAO,GAAEK,IAAI,CAACC,KAAL,CAAW,CAACC,IAAI,CAACC,GAAL,KAAaP,SAAd,IAAyB,IAApC,CAAV,CAAT;AAED,KAJgB,EAId,IAJc,CAAjB;AAKA,WAAO,SAASQ,OAAT,GAAkB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAC,MAAAA,aAAa,CAACT,GAAD,CAAb;AAED,KAJD;AAMD,GAhBQ,EAgBN,CAACF,SAAD,CAhBM,CAAT;AAkBA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAjCD;;GAAMF,K;;KAAAA,K;AAmCN,eAAeA,KAAf","sourcesContent":["import {useEffect, useState } from 'react'\nconst Timer = ({maxTime, startTime, secSetter}) => {\n\n\n\n\n\n\n\n\n  useEffect(() => {\n    let int = null\n    if (startTime == 0){\n      return\n    }\n    int = setInterval(() => {\n\n      secSetter(maxTime-(Math.round((Date.now() - startTime)/1000)))\n\n    }, 1000)\n    return function cleanup(){\n      console.log('clearing')\n      clearInterval(int)\n\n    }\n\n  }, [startTime])\n\n  return (\n    <div>\n\n    </div>\n  )\n\n}\n\nexport default Timer\n"]},"metadata":{},"sourceType":"module"}