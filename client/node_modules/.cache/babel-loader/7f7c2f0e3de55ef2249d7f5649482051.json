{"ast":null,"code":"import _slicedToArray from\"/Users/jessenicholas/shock-draw-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var Timer=function Timer(_ref){var maxTime=_ref.maxTime,startTime=_ref.startTime,callBack=_ref.callBack;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),secs=_useState2[0],setSecs=_useState2[1];useEffect(function(){var int=null;if(startTime==0){return;}int=setInterval(function(){setSecs(maxTime-Math.round((Date.now()-startTime)/1000));if(secs<0){setSecs(maxTime);callBack();}},1000);return function cleanup(){clearInterval(int);};},[startTime]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{children:secs})});};export default Timer;","map":{"version":3,"sources":["/Users/jessenicholas/shock-draw-final/client/src/components/Timer/Timer.js"],"names":["useEffect","useState","Timer","maxTime","startTime","callBack","secs","setSecs","int","setInterval","Math","round","Date","now","cleanup","clearInterval"],"mappings":"mKAAA,OAAQA,SAAR,CAAmBC,QAAnB,KAAmC,OAAnC,C,2CACA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAoC,IAAlCC,CAAAA,OAAkC,MAAlCA,OAAkC,CAAzBC,SAAyB,MAAzBA,SAAyB,CAAdC,QAAc,MAAdA,QAAc,CAIhD,cAAwBJ,QAAQ,CAAC,CAAD,CAAhC,wCAAOK,IAAP,eAAaC,OAAb,eAKAP,SAAS,CAAC,UAAM,CACd,GAAIQ,CAAAA,GAAG,CAAG,IAAV,CACA,GAAIJ,SAAS,EAAI,CAAjB,CAAmB,CACjB,OACD,CACDI,GAAG,CAAGC,WAAW,CAAC,UAAM,CAEtBF,OAAO,CAACJ,OAAO,CAAEO,IAAI,CAACC,KAAL,CAAW,CAACC,IAAI,CAACC,GAAL,GAAaT,SAAd,EAAyB,IAApC,CAAV,CAAP,CACA,GAAIE,IAAI,CAAG,CAAX,CAAa,CACXC,OAAO,CAACJ,OAAD,CAAP,CACAE,QAAQ,GACT,CACF,CAPgB,CAOd,IAPc,CAAjB,CAQA,MAAO,SAASS,CAAAA,OAAT,EAAkB,CACvBC,aAAa,CAACP,GAAD,CAAb,CAED,CAHD,CAKD,CAlBQ,CAkBN,CAACJ,SAAD,CAlBM,CAAT,CAoBA,mBACE,kCACE,qBAAME,IAAN,EADF,EADF,CAMD,CAnCD,CAqCA,cAAeJ,CAAAA,KAAf","sourcesContent":["import {useEffect, useState } from 'react'\nconst Timer = ({maxTime, startTime, callBack}) => {\n\n\n\n  const [secs, setSecs] = useState(0)\n\n\n\n\n  useEffect(() => {\n    let int = null\n    if (startTime == 0){\n      return\n    }\n    int = setInterval(() => {\n\n      setSecs(maxTime-(Math.round((Date.now() - startTime)/1000)))\n      if (secs < 0){\n        setSecs(maxTime)\n        callBack()\n      }\n    }, 1000)\n    return function cleanup(){\n      clearInterval(int)\n\n    }\n\n  }, [startTime])\n\n  return (\n    <div>\n      <div>{secs}</div>\n    </div>\n  )\n\n}\n\nexport default Timer\n"]},"metadata":{},"sourceType":"module"}