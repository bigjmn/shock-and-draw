{"ast":null,"code":"import _toConsumableArray from\"/Users/jessenicholas/shock-draw-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/jessenicholas/shock-draw-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import socket from'../../context/socket.js';import classes from'./Recap.module.css';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Recap=function Recap(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),redHistory=_useState2[0],setRedHistory=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),blueHistory=_useState4[0],setBlueHistory=_useState4[1];var _useState5=useState(props.totalRedPoints),_useState6=_slicedToArray(_useState5,2),shownRedPoints=_useState6[0],setShownRedPoints=_useState6[1];var _useState7=useState(props.totalBluePoints),_useState8=_slicedToArray(_useState7,2),shownBluePoints=_useState8[0],setShownBluePoints=_useState8[1];useEffect(function(){socket.emit('getwordhistory');},[]);useEffect(function(){socket.on('takehistory',function(data){if(!data.oldred&&!data.oldblue){socket.emit('getPreview');}setRedHistory(function(oldHistory){return data.oldred?[].concat(_toConsumableArray(oldHistory),[data.oldred]):oldHistory;});setBlueHistory(function(oldHistory){return data.oldblue?[].concat(_toConsumableArray(oldHistory),[data.oldblue]):oldHistory;});if(data.oldred&&data.oldred.success){setShownRedPoints(function(p){return p+1;});}if(data.oldblue&&data.oldblue.success){setShownBluePoints(function(p){return p+1;});}});return function(){socket.off('takehistory');};});return/*#__PURE__*/_jsxs(\"div\",{className:classes.recapContainer,children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"End of Round \",props.round]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.pointsRecapContainer,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.totalpointsHolder,children:[/*#__PURE__*/_jsx(\"h1\",{style:{color:\"#ff3b2d\"},children:shownRedPoints}),redHistory.map(function(oldword,i){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{style:{color:oldword.success?\"green\":\"gray\"},children:oldword.word})},i);})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.totalpointsHolder,children:[/*#__PURE__*/_jsx(\"h1\",{style:{color:\"#2df1ff\"},children:shownBluePoints}),blueHistory.map(function(oldword,i){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{style:{color:oldword.success?\"green\":\"gray\"},children:oldword.word})},i);})]})]})]});};export default Recap;","map":{"version":3,"sources":["/Users/jessenicholas/shock-draw-final/client/src/layouts/Recap/Recap.js"],"names":["useEffect","useState","socket","classes","Recap","props","redHistory","setRedHistory","blueHistory","setBlueHistory","totalRedPoints","shownRedPoints","setShownRedPoints","totalBluePoints","shownBluePoints","setShownBluePoints","emit","on","data","oldred","oldblue","oldHistory","success","p","off","recapContainer","round","pointsRecapContainer","totalpointsHolder","color","map","oldword","i","word"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react'\nimport socket from '../../context/socket.js'\n\nimport classes from './Recap.module.css'\n\nconst Recap = (props) => {\n\n  const [redHistory, setRedHistory] = useState([])\n  const [blueHistory, setBlueHistory] = useState([])\n\n  const [shownRedPoints, setShownRedPoints] = useState(props.totalRedPoints)\n  const [shownBluePoints, setShownBluePoints] = useState(props.totalBluePoints)\n\n\n\n\n  useEffect(() => {\n    socket.emit('getwordhistory')\n  }, [])\n\n  useEffect(() => {\n    socket.on('takehistory', (data) => {\n      if (!data.oldred && !data.oldblue){\n        socket.emit('getPreview')\n      }\n      setRedHistory(oldHistory => data.oldred ? [...oldHistory, data.oldred] : oldHistory)\n      setBlueHistory(oldHistory => data.oldblue ? [...oldHistory, data.oldblue] : oldHistory)\n      if (data.oldred && data.oldred.success){\n        setShownRedPoints(p => p+1)\n      }\n      if (data.oldblue && data.oldblue.success){\n        setShownBluePoints(p => p+1)\n\n      } \n\n\n    })\n\n    return ()=> {\n      socket.off('takehistory')\n    }\n  })\n\n\n  return (\n    <div className={classes.recapContainer}>\n      <h1>End of Round {props.round}</h1>\n    <div className={classes.pointsRecapContainer}>\n      <div className={classes.totalpointsHolder} >\n        <h1 style={{color:\"#ff3b2d\"}}>{shownRedPoints}</h1>\n        {redHistory.map((oldword, i) => (\n          <div key={i}>\n            <h2 style={{color:oldword.success ? \"green\" : \"gray\"}}>{oldword.word}</h2>\n          </div>\n        ))}\n\n\n      </div>\n      <div className={classes.totalpointsHolder} >\n        <h1 style={{color:\"#2df1ff\"}}>{shownBluePoints}</h1>\n\n          {blueHistory.map((oldword, i) => (\n            <div key={i}>\n              <h2 style={{color:oldword.success ? \"green\" : \"gray\"}}>{oldword.word}</h2>\n            </div>\n          ))}\n      </div>\n    </div>\n    </div>\n  )\n}\n\n\n\nexport default Recap\n"]},"metadata":{},"sourceType":"module"}