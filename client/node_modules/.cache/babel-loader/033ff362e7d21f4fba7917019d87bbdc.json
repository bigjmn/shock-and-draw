{"ast":null,"code":"var _jsxFileName = \"/Users/jessenicholas/shock-draw-final/client/src/components/MessageHolder/MessageHolder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport socket from '../../context/socket.js';\nimport Message from '../Message/Message.js';\nimport classes from './MessageHolder.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageHolder = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    socket.on('response', data => {\n      setMessages(oldMessages => [...oldMessages, data]);\n    });\n    socket.on('attackBounce', () => {\n      socket.emit('giveAttack');\n    });\n    return () => {\n      socket.off('response');\n      socket.off('attackBounce');\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.messageWrapper,\n    children: [messages.map((message, i) => /*#__PURE__*/_jsxDEV(Message, {\n      message: message\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessageHolder, \"kG7o1cCHxxq7FrYHEp0DHLazx+Q=\");\n\n_c = MessageHolder;\nexport default MessageHolder;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageHolder\");","map":{"version":3,"sources":["/Users/jessenicholas/shock-draw-final/client/src/components/MessageHolder/MessageHolder.js"],"names":["React","useState","useEffect","useRef","socket","Message","classes","MessageHolder","messages","setMessages","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","on","data","oldMessages","emit","off","messageWrapper","map","message","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,4BAApB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMS,cAAc,GAAGP,MAAM,CAAC,IAAD,CAA7B;;AAEA,QAAMQ,cAAc,GAAG,MAAM;AAAA;;AAC3B,6BAAAD,cAAc,CAACE,OAAf,gFAAwBC,cAAxB,CAAuC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAvC;AACD,GAFD;;AAIFZ,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACH,QAAD,CAFM,CAAT;AAIEN,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,MAAM,CAACW,EAAP,CAAU,UAAV,EAAuBC,IAAD,IAAU;AAC9BP,MAAAA,WAAW,CAAEQ,WAAD,IAAiB,CAAC,GAAGA,WAAJ,EAAiBD,IAAjB,CAAlB,CAAX;AAED,KAHD;AAIAZ,IAAAA,MAAM,CAACW,EAAP,CAAU,cAAV,EAA0B,MAAM;AAC9BX,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AACD,KAFD;AAIA,WAAO,MAAM;AACXd,MAAAA,MAAM,CAACe,GAAP,CAAW,UAAX;AACAf,MAAAA,MAAM,CAACe,GAAP,CAAW,cAAX;AACD,KAHD;AAID,GAbQ,CAAT;AAeA,sBACE;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACc,cAAxB;AAAA,eACGZ,QAAQ,CAACa,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,kBAEV,QAAC,OAAD;AAAiB,MAAA,OAAO,EAAED;AAA1B,OAAcC,CAAd;AAAA;AAAA;AAAA;AAAA,YAFH,CADH,eAME;AAAK,MAAA,GAAG,EAAEb;AAAV;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAvCD;;GAAMH,a;;KAAAA,a;AAyCN,eAAeA,aAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport socket from '../../context/socket.js'\nimport Message from '../Message/Message.js'\nimport classes from './MessageHolder.module.css'\n\nconst MessageHolder = () => {\n\n  const [messages, setMessages] = useState([])\n\n  const messagesEndRef = useRef(null)\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\nuseEffect(() => {\n  scrollToBottom()\n}, [messages]);\n\n  useEffect(() => {\n    socket.on('response', (data) => {\n      setMessages((oldMessages) => [...oldMessages, data])\n\n    })\n    socket.on('attackBounce', () => {\n      socket.emit('giveAttack')\n    })\n\n    return () => {\n      socket.off('response')\n      socket.off('attackBounce')\n    }\n  })\n\n  return(\n    <div className={classes.messageWrapper}>\n      {messages.map((message, i) => (\n\n          <Message key={i} message={message}/>\n\n      ))}\n      <div ref={messagesEndRef} />\n    </div>\n  )\n}\n\nexport default MessageHolder\n"]},"metadata":{},"sourceType":"module"}